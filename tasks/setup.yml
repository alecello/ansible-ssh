---
- name: Check wether the public key revocation list exists
  become: true
  stat:
    path: "/etc/ssh/revoked-keys"
  register: ssh_server_collected
  when:
    - ssh_server_config.authentication.methods.pubkey.enabled

- name: Create the public key revocation list
  become: true
  file:
    path: "/etc/ssh/revoked-keys"
    state: touch
  when:
    - ssh_server_config.authentication.methods.pubkey.enabled
    - not ssh_server_collected.stat.exists
  notify: Restore SELinux labels

- name: Create the public key authorization directory
  become: true
  file:
    path: "/etc/ssh/authorized-keys"
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
    state: directory
  notify: Restore SELinux labels

- name: Enumerate the public key authorization list files
  become: true
  find:
    paths: "/etc/ssh/authorized-keys"
    file_type: file
    follow: no
  register: ssh_server_collected

- name: Correct owner and permissions for the public key authorization list files
  become: true
  file:
    path: "{{ item.path }}"
    owner: "{{ item.path.split('/')[-1] }}"
    group: "{{ item.path.split('/')[-1] }}"
    mode: u=rw,g=,o=
    state: file
  loop: "{{ ssh_server_collected.files }}"
  notify: Restore SELinux labels

- name: Install the SSH server configuration
  become: true
  template:
    src: sshd-config.j2
    dest: "/etc/ssh/sshd_config"
    owner: root
    group: root
    mode: u=rw,g=,o=
  notify: Restart the SSH service

- name: Configure the SSH server host keys
  include_tasks: tasks/blocks/setup-ssh-keys.yml
  loop: "{{ ssh_server_config.algorithms.hostkey }}"